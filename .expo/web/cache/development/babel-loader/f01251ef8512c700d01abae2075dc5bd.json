{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Errors from \"./Errors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Input(_ref) {\n  var props = _ref.props,\n      modalFormat = _ref.modalFormat;\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        children: \"Time\"\n      }), _jsx(TextInput, {\n        style: styles.inputWatch,\n        onChangeText: props.handleChange('hours'),\n        placeholder: \"HH\",\n        keyboardType: \"numeric\",\n        value: props.values.hours,\n        onBlur: props.handleBlur('hours')\n      }), _jsx(TextInput, {\n        style: styles.inputWatch,\n        onChangeText: props.handleChange('minute'),\n        placeholder: \"MM\",\n        keyboardType: \"numeric\",\n        value: props.values.minute,\n        onBlur: props.handleBlur('minute')\n      }), modalFormat == false && _jsx(TextInput, {\n        style: styles.inputWatch,\n        onChangeText: props.handleChange('second'),\n        placeholder: \"SS\",\n        keyboardType: \"numeric\",\n        value: props.values.second,\n        onBlur: props.handleBlur('second')\n      })]\n    }), modalFormat == false && _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        children: \"Date\"\n      }), _jsx(TextInput, {\n        style: styles.inputDate,\n        onChange: props.handleChange('date'),\n        placeholder: \"09/01/2021\",\n        value: props.values.date,\n        onBlur: props.handleBlur('date')\n      })]\n    }), _jsx(Button, {\n      style: styles.save,\n      title: \"Save\",\n      onPress: props.handleSubmit\n    }), _jsx(Errors, {\n      props: props,\n      modalFormat: modalFormat\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  inputRow: {\n    flexDirection: \"row\",\n    marginTop: 5\n  },\n  inputWatch: {\n    width: 35,\n    padding: 3,\n    marginLeft: 3,\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  inputDate: {\n    width: 100,\n    height: 35,\n    borderBottomColor: 'black',\n    borderBottomStartRadius: 2,\n    borderBottomWidth: 2,\n    marginLeft: 3,\n    padding: 10\n  },\n  save: {\n    marginVertical: 10,\n    backgroundColor: \"red\"\n  }\n});\nexport default Input;","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/watch/components/Input.jsx"],"names":["Errors","Input","props","modalFormat","styles","inputRow","inputWatch","handleChange","values","hours","handleBlur","minute","second","inputDate","date","save","handleSubmit","StyleSheet","create","flexDirection","marginTop","width","padding","marginLeft","borderWidth","borderColor","height","borderBottomColor","borderBottomStartRadius","borderBottomWidth","marginVertical","backgroundColor"],"mappings":"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","sourcesContent":["import {  StyleSheet, View, Text, TextInput, Button } from 'react-native';\r\n\r\nimport Errors from './Errors'\r\n\r\nfunction Input({props,modalFormat}){\r\n  return(\r\n    <View>\r\n        <View style={styles.inputRow}>\r\n            <Text>Time</Text>\r\n            <TextInput \r\n                style={styles.inputWatch} \r\n                onChangeText={props.handleChange('hours')} \r\n                placeholder='HH' \r\n                keyboardType=\"numeric\" \r\n                value={props.values.hours}\r\n                onBlur={props.handleBlur('hours')}\r\n            />\r\n            <TextInput \r\n            style={styles.inputWatch} \r\n            onChangeText={props.handleChange('minute')} \r\n            placeholder='MM' \r\n            keyboardType=\"numeric\" \r\n            value={props.values.minute}\r\n            onBlur={props.handleBlur('minute')}\r\n            />   \r\n{modalFormat == false && (<TextInput \r\n  style={styles.inputWatch} \r\n  onChangeText={props.handleChange('second')} \r\n  placeholder='SS' \r\n  keyboardType=\"numeric\" \r\n  value={props.values.second}\r\n  onBlur={props.handleBlur('second')}\r\n  />)}\r\n            \r\n\r\n        </View>\r\n{modalFormat == false && (  <View style={styles.inputRow}>   \r\n  <Text>Date</Text>\r\n  <TextInput \r\n  style={styles.inputDate}  \r\n  onChange={props.handleChange('date')} \r\n  placeholder='09/01/2021' \r\n  value={props.values.date}\r\n  onBlur={props.handleBlur('date')}\r\n  />\r\n</View>)}\r\n      \r\n\r\n        <Button \r\n        style={styles.save} \r\n        title=\"Save\" \r\n        onPress={props.handleSubmit} ></Button>\r\n        <Errors props={props} modalFormat={modalFormat} ></Errors>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputRow:{\r\n        flexDirection:\"row\",\r\n        marginTop:5\r\n      },\r\n      inputWatch:{\r\n        width: 35,\r\n        padding: 3,\r\n        marginLeft:3,\r\n        borderWidth:2,\r\n        borderColor:'black',\r\n      },\r\n      inputDate:{\r\n        width: 100,\r\n        height: 35,\r\n        borderBottomColor:'black',\r\n        borderBottomStartRadius:2,\r\n        borderBottomWidth:2,\r\n        marginLeft:3,\r\n        padding: 10,\r\n      },\r\n      save:{\r\n        marginVertical:10,\r\n        backgroundColor: \"red\",\r\n      },\r\n});\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}