{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ButtonsRow from \"../stopper/components/ButtonsRow\";\nimport ButtonClick from \"../stopper/components/ButtonClick\";\nimport ModalInput from \"../watch/components/ModalInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar set = function set() {\n  if (modalOpen == false) {\n    console.log(modalOpen);\n    setmodalOpen(true);\n  } else {\n    setmodalOpen(false);\n  }\n};\n\nvar Enable = function Enable() {\n  console.log(6);\n};\n\nvar Disables = function Disables() {\n  console.log(7);\n};\n\nvar save = function save(values) {\n  console.log(values);\n};\n\nexport default function AppAlarm() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      alarm = _useState2[0],\n      setAlarm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalOpen = _useState4[0],\n      setmodalOpen = _useState4[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"hi\"\n    }), alarm == 0 && _jsxs(ButtonsRow, {\n      children: [_jsx(ButtonClick, {\n        title: \"Set\",\n        background: \"#5F9EA0\",\n        onPress: set\n      }), _jsx(ButtonClick, {\n        title: \"Enable\",\n        background: \"#5F9EA0\",\n        onPress: Enable\n      })]\n    }), alarm == 0 && _jsxs(ButtonsRow, {\n      children: [_jsx(ButtonClick, {\n        title: \"Set\",\n        background: \"#5F9EA0\",\n        onPress: set\n      }), _jsx(ButtonClick, {\n        title: \"Disables\",\n        background: \"#5F9EA0\",\n        onPress: Disables\n      })]\n    }), _jsx(ModalInput, {\n      modalOpen: modalOpen,\n      set: set,\n      save: save\n    })]\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/alarm/AppAlarm.js"],"names":["useState","ButtonsRow","ButtonClick","ModalInput","set","modalOpen","console","log","setmodalOpen","Enable","Disables","save","values","AppAlarm","alarm","setAlarm","styles","StyleSheet","create"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAGA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;;;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAI;AACZ,MAAGC,SAAS,IAAI,KAAhB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD,MAGK;AACDA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACF,CAPH;;AASA,IAAMC,MAAM,GAAE,SAARA,MAAQ,GAAI;AACdH,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH,CAFD;;AAIA,IAAMG,QAAQ,GAAE,SAAVA,QAAU,GAAI;AAChBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH,CAFD;;AAIA,IAAMI,IAAI,GAAC,SAALA,IAAK,CAACC,MAAD,EAAU;AACjBN,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,CAFH;;AAIA,eAAe,SAASC,QAAT,GAAoB;AAE/B,kBAAyBb,QAAQ,CAAC,CAAD,CAAjC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAaC,QAAb;;AACA,mBAAiCf,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAiBG,YAAjB;;AAEF,SACE,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAGKM,KAAK,IAAI,CAAT,IACD,MAAC,UAAD;AAAA,iBACI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,KAAnB;AAA0B,QAAA,UAAU,EAAC,SAArC;AAA+C,QAAA,OAAO,EAAEV;AAAxD,QADJ,EAEI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,QAAnB;AAA6B,QAAA,UAAU,EAAC,SAAxC;AAAkD,QAAA,OAAO,EAAEK;AAA3D,QAFJ;AAAA,MAJJ,EAUKK,KAAK,IAAI,CAAT,IACD,MAAC,UAAD;AAAA,iBACI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,KAAnB;AAA0B,QAAA,UAAU,EAAC,SAArC;AAA+C,QAAA,OAAO,EAAEV;AAAxD,QADJ,EAEI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,UAAnB;AAA+B,QAAA,UAAU,EAAC,SAA1C;AAAoD,QAAA,OAAO,EAAEM;AAA7D,QAFJ;AAAA,MAXJ,EAiBI,KAAC,UAAD;AAAY,MAAA,SAAS,EAAEL,SAAvB;AAAkC,MAAA,GAAG,EAAED,GAAvC;AAA4C,MAAA,IAAI,EAAEO;AAAlD,MAjBJ;AAAA,IADF;AAwBD;AAED,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { useState } from 'react';\r\nimport { StyleSheet, Text,View } from 'react-native';\r\n\r\nimport ButtonsRow from '../stopper/components/ButtonsRow';\r\nimport ButtonClick from '../stopper/components/ButtonClick'\r\nimport ModalInput from '../watch/components/ModalInput';\r\n\r\n\r\nconst set = ()=>{\r\n    if(modalOpen == false){\r\n        console.log(modalOpen)\r\n        setmodalOpen(true)\r\n    }else{\r\n        setmodalOpen(false)\r\n    }\r\n  }\r\n\r\nconst Enable= ()=>{\r\n    console.log(6)\r\n}\r\n\r\nconst Disables= ()=>{\r\n    console.log(7)\r\n}\r\n\r\nconst save=(values)=>{\r\n    console.log(values)\r\n  }\r\n\r\nexport default function AppAlarm() {\r\n\r\n    const [alarm,setAlarm] = useState(0)\r\n    const [modalOpen,setmodalOpen] = useState(false)\r\n\r\n  return (\r\n    <View>\r\n        <Text>hi</Text>\r\n\r\n        {alarm == 0 && (\r\n        <ButtonsRow>\r\n            <ButtonClick title=\"Set\"  background=\"#5F9EA0\" onPress={set}></ButtonClick>\r\n            <ButtonClick title=\"Enable\"  background=\"#5F9EA0\" onPress={Enable}></ButtonClick>\r\n        </ButtonsRow>\r\n        )}\r\n\r\n        {alarm == 0 && (\r\n        <ButtonsRow>\r\n            <ButtonClick title=\"Set\"  background=\"#5F9EA0\" onPress={set}></ButtonClick>\r\n            <ButtonClick title=\"Disables\"  background=\"#5F9EA0\" onPress={Disables}></ButtonClick>\r\n        </ButtonsRow>\r\n        )}\r\n\r\n        <ModalInput modalOpen={modalOpen} set={set} save={save}/>\r\n\r\n        \r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});"]},"metadata":{},"sourceType":"module"}