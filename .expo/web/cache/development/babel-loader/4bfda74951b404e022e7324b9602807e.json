{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { Formik } from 'formik';\nimport ReviewFrom from \"./ReviewFrom\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ModalInput(_ref) {\n  var modalOpen = _ref.modalOpen,\n      set = _ref.set;\n  return _jsx(Modal, {\n    visible: modalOpen,\n    animationType: 'slide',\n    transparent: true,\n    children: _jsxs(View, {\n      style: styles.allSetModal,\n      children: [_jsx(AntDesign, {\n        name: \"closecircle\",\n        size: 24,\n        color: \"black\",\n        onPress: function onPress() {\n          set();\n        }\n      }), _jsx(Formik, {\n        initialValues: {\n          hours: \"\",\n          minute: \"\",\n          second: \"\",\n          date: \"\"\n        },\n        onSubmit: function onSubmit(value) {\n          console.log(value);\n        },\n        children: function children(props) {\n          _jsxs(View, {\n            children: [_jsxs(View, {\n              style: styles.inputRow,\n              children: [_jsx(Text, {\n                children: \"Time\"\n              }), _jsx(TextInput, {\n                style: styles.inputWatch,\n                onChangeText: props.handleChange('hours'),\n                placeholder: \"HH\",\n                keyboardType: \"numeric\",\n                value: props.values.hours\n              }), _jsx(TextInput, {\n                style: styles.inputWatch,\n                onChangeText: props.handleChange('minute'),\n                placeholder: \"MM\",\n                keyboardType: \"numeric\",\n                value: props.values.minute\n              }), _jsx(TextInput, {\n                style: styles.inputWatch,\n                onChangeText: props.handleChange('second'),\n                placeholder: \"SS\",\n                keyboardType: \"numeric\",\n                value: props.values.second\n              })]\n            }), _jsxs(View, {\n              style: styles.inputRow,\n              children: [_jsx(Text, {\n                children: \"Date\"\n              }), _jsx(TextInput, {\n                style: styles.inputDate,\n                onChange: props.handleChange('date'),\n                placeholder: \"09/01/2021\",\n                value: props.values.date\n              })]\n            }), _jsx(Button, {\n              style: styles.save,\n              title: \"Save\",\n              onPress: props.handleSubmit\n            })]\n          });\n        }\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  allSetModal: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    padding: 35,\n    width: 200,\n    justifyContent: 'center'\n  }\n});\nexport default ModalInput;","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/watch/components/ModalInput.jsx"],"names":["AntDesign","Formik","ReviewFrom","ModalInput","modalOpen","set","styles","allSetModal","hours","minute","second","date","value","console","log","props","inputRow","inputWatch","handleChange","values","inputDate","save","handleSubmit","StyleSheet","create","margin","backgroundColor","borderRadius","padding","width","justifyContent"],"mappings":"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","sourcesContent":["import {  StyleSheet, View, Modal, Button, TextInput, Text} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { Formik } from 'formik';\r\n\r\n\r\n\r\nimport ReviewFrom from './ReviewFrom'\r\n\r\nfunction ModalInput({modalOpen,set}){\r\n\r\n    return(\r\n        <Modal visible={modalOpen} animationType ={'slide'}  transparent={true}>\r\n            <View style={styles.allSetModal}>\r\n                <AntDesign name=\"closecircle\" size={24} color=\"black\" onPress={()=>{set()}}/>\r\n                <Formik initialValues={{hours:\"\", minute:\"\" , second:\"\", date: \"\"  }}\r\n        onSubmit={(value)=>{console.log(value)}}>\r\n            {(props)=>{\r\n                <View>\r\n                    <View style={styles.inputRow}>\r\n                        <Text>Time</Text>\r\n                        <TextInput style={styles.inputWatch} onChangeText={props.handleChange('hours')} placeholder='HH' keyboardType=\"numeric\" value={props.values.hours}/>\r\n                        <TextInput style={styles.inputWatch} onChangeText={props.handleChange('minute')} placeholder='MM' keyboardType=\"numeric\" value={props.values.minute}/>\r\n                        <TextInput style={styles.inputWatch} onChangeText={props.handleChange('second')} placeholder='SS' keyboardType=\"numeric\" value={props.values.second}/>\r\n                    </View>\r\n                    <View style={styles.inputRow}>\r\n                        <Text>Date</Text>\r\n                        <TextInput style={styles.inputDate}  onChange={props.handleChange('date')} placeholder='09/01/2021' value={props.values.date}/>\r\n                    </View>\r\n                        <Button style={styles.save} title=\"Save\" onPress={props.handleSubmit} ></Button>\r\n                </View>\r\n            }}\r\n        </Formik>\r\n            </View>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    allSetModal:{\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 40,\r\n        padding: 35,\r\n        width: 200,\r\n        justifyContent:'center'\r\n        },\r\n});\r\n\r\nexport default ModalInput;"]},"metadata":{},"sourceType":"module"}