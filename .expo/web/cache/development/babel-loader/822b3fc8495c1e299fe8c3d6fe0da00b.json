{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ModalInput() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalOpen = _useState2[0],\n      setmodalOpen = _useState2[1];\n\n  return _jsx(Modal, {\n    visible: modalOpen,\n    animationType: 'slide',\n    transparent: true,\n    children: _jsxs(View, {\n      style: styles.allSetModal,\n      children: [_jsx(AntDesign, {\n        name: \"closecircle\",\n        size: 24,\n        color: \"black\",\n        onPress: function onPress() {}\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          children: \"Time\"\n        }), _jsx(TextInput, {\n          style: styles.inputWatch,\n          onChangeText: function onChangeText() {},\n          placeholder: \"HH\",\n          keyboardType: \"numeric\",\n          value: \"\"\n        }), _jsx(TextInput, {\n          style: styles.inputWatch,\n          onChangeText: function onChangeText() {},\n          placeholder: \"MM\",\n          keyboardType: \"numeric\",\n          value: \"\"\n        }), _jsx(TextInput, {\n          style: styles.inputWatch,\n          onChangeText: function onChangeText() {},\n          placeholder: \"SS\",\n          keyboardType: \"numeric\",\n          value: \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(Text, {\n          children: \"Date\"\n        }), _jsx(TextInput, {\n          style: styles.inputDate,\n          onChange: function onChange() {},\n          placeholder: \"09/01/2021\"\n        })]\n      }), _jsx(Button, {\n        style: styles.save,\n        title: \"Save\",\n        onPress: function onPress() {}\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  allSetModal: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    padding: 35,\n    width: 200,\n    justifyContent: 'center'\n  },\n  inputRow: {\n    flexDirection: \"row\",\n    marginTop: 5\n  },\n  inputWatch: {\n    width: 35,\n    padding: 3,\n    marginLeft: 3,\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  inputDate: {\n    width: 100,\n    height: 35,\n    borderBottomColor: 'black',\n    borderBottomStartRadius: 2,\n    borderBottomWidth: 2,\n    marginLeft: 3,\n    padding: 10\n  },\n  save: {\n    marginVertical: 10,\n    backgroundColor: \"red\"\n  }\n});\nexport default ModalInput;","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/watch/components/ModalInput.jsx"],"names":["React","useState","useEffect","AntDesign","ModalInput","modalOpen","setmodalOpen","styles","allSetModal","inputRow","inputWatch","inputDate","save","StyleSheet","create","margin","backgroundColor","borderRadius","padding","width","justifyContent","flexDirection","marginTop","marginLeft","borderWidth","borderColor","height","borderBottomColor","borderBottomStartRadius","borderBottomWidth","marginVertical"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;;;;AAEA,SAASC,UAAT,GAAqB;AAEjB,kBAA+BH,QAAQ,CAAC,KAAD,CAAvC;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAiBC,YAAjB;;AAEA,SACI,KAAC,KAAD;AAAO,IAAA,OAAO,EAAED,SAAhB;AAA2B,IAAA,aAAa,EAAG,OAA3C;AAAqD,IAAA,WAAW,EAAE,IAAlE;AAAA,cACA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACC,WAApB;AAAA,iBACA,KAAC,SAAD;AAAW,QAAA,IAAI,EAAC,aAAhB;AAA8B,QAAA,IAAI,EAAE,EAApC;AAAwC,QAAA,KAAK,EAAC,OAA9C;AAAsD,QAAA,OAAO,EAAE,mBAAI,CAAE;AAArE,QADA,EAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,SAAD;AAAW,UAAA,KAAK,EAAEF,MAAM,CAACG,UAAzB;AAAqC,UAAA,YAAY,EAAE,wBAAI,CAAE,CAAzD;AAA2D,UAAA,WAAW,EAAC,IAAvE;AAA4E,UAAA,YAAY,EAAC,SAAzF;AAAmG,UAAA,KAAK,EAAC;AAAzG,UAFJ,EAGI,KAAC,SAAD;AAAW,UAAA,KAAK,EAAEH,MAAM,CAACG,UAAzB;AAAqC,UAAA,YAAY,EAAE,wBAAI,CAAE,CAAzD;AAA2D,UAAA,WAAW,EAAC,IAAvE;AAA4E,UAAA,YAAY,EAAC,SAAzF;AAAmG,UAAA,KAAK,EAAC;AAAzG,UAHJ,EAII,KAAC,SAAD;AAAW,UAAA,KAAK,EAAEH,MAAM,CAACG,UAAzB;AAAqC,UAAA,YAAY,EAAE,wBAAI,CAAE,CAAzD;AAA2D,UAAA,WAAW,EAAC,IAAvE;AAA4E,UAAA,YAAY,EAAC,SAAzF;AAAmG,UAAA,KAAK,EAAC;AAAzG,UAJJ;AAAA,QAFF,EAQE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACE,QAApB;AAAA,mBACE,KAAC,IAAD;AAAA;AAAA,UADF,EAEE,KAAC,SAAD;AAAW,UAAA,KAAK,EAAEF,MAAM,CAACI,SAAzB;AAAqC,UAAA,QAAQ,EAAE,oBAAI,CAAE,CAArD;AAAuD,UAAA,WAAW,EAAC;AAAnE,UAFF;AAAA,QARF,EAYI,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAEJ,MAAM,CAACK,IAAtB;AAA4B,QAAA,KAAK,EAAC,MAAlC;AAAyC,QAAA,OAAO,EAAE,mBAAI,CAAE;AAAxD,QAZJ;AAAA;AADA,IADJ;AAkBH;;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,WAAW,EAAC;AACRO,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,eAAe,EAAE,OAFT;AAGRC,IAAAA,YAAY,EAAE,EAHN;AAIRC,IAAAA,OAAO,EAAE,EAJD;AAKRC,IAAAA,KAAK,EAAE,GALC;AAMRC,IAAAA,cAAc,EAAC;AANP,GADiB;AASzBX,EAAAA,QAAQ,EAAC;AACPY,IAAAA,aAAa,EAAC,KADP;AAEPC,IAAAA,SAAS,EAAC;AAFH,GATgB;AAczBZ,EAAAA,UAAU,EAAC;AACTS,IAAAA,KAAK,EAAE,EADE;AAETD,IAAAA,OAAO,EAAE,CAFA;AAGTK,IAAAA,UAAU,EAAC,CAHF;AAITC,IAAAA,WAAW,EAAC,CAJH;AAKTC,IAAAA,WAAW,EAAC;AALH,GAdc;AAqBzBd,EAAAA,SAAS,EAAC;AACRQ,IAAAA,KAAK,EAAE,GADC;AAERO,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,iBAAiB,EAAC,OAHV;AAIRC,IAAAA,uBAAuB,EAAC,CAJhB;AAKRC,IAAAA,iBAAiB,EAAC,CALV;AAMRN,IAAAA,UAAU,EAAC,CANH;AAORL,IAAAA,OAAO,EAAE;AAPD,GArBe;AA8BzBN,EAAAA,IAAI,EAAC;AACHkB,IAAAA,cAAc,EAAC,EADZ;AAEHd,IAAAA,eAAe,EAAE;AAFd;AA9BoB,CAAlB,CAAf;AAoCA,eAAeZ,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {  StyleSheet, View, Modal, Button, TextInput, Text} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons'; \r\n\r\nfunction ModalInput(){\r\n\r\n    const [modalOpen,setmodalOpen]=useState(false)\r\n    \r\n    return(\r\n        <Modal visible={modalOpen} animationType ={'slide'}  transparent={true}>\r\n        <View style={styles.allSetModal}>\r\n        <AntDesign name=\"closecircle\" size={24} color=\"black\" onPress={()=>{}}/>\r\n          <View style={styles.inputRow}>\r\n              <Text>Time</Text>\r\n              <TextInput style={styles.inputWatch} onChangeText={()=>{}} placeholder='HH' keyboardType=\"numeric\" value=''/>\r\n              <TextInput style={styles.inputWatch} onChangeText={()=>{}} placeholder='MM' keyboardType=\"numeric\" value=''/>\r\n              <TextInput style={styles.inputWatch} onChangeText={()=>{}} placeholder='SS' keyboardType=\"numeric\" value=''/>\r\n          </View>\r\n          <View style={styles.inputRow}>\r\n            <Text>Date</Text>\r\n            <TextInput style={styles.inputDate}  onChange={()=>{}} placeholder='09/01/2021'/>\r\n          </View>\r\n            <Button style={styles.save} title=\"Save\" onPress={()=>{}} ></Button>\r\n        </View>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    allSetModal:{\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 40,\r\n        padding: 35,\r\n        width: 200,\r\n        justifyContent:'center'\r\n        },\r\n        inputRow:{\r\n          flexDirection:\"row\",\r\n          marginTop:5\r\n          \r\n        },\r\n        inputWatch:{\r\n          width: 35,\r\n          padding: 3,\r\n          marginLeft:3,\r\n          borderWidth:2,\r\n          borderColor:'black',\r\n        },\r\n        inputDate:{\r\n          width: 100,\r\n          height: 35,\r\n          borderBottomColor:'black',\r\n          borderBottomStartRadius:2,\r\n          borderBottomWidth:2,\r\n          marginLeft:3,\r\n          padding: 10,\r\n        },\r\n        save:{\r\n          marginVertical:10,\r\n          backgroundColor: \"red\",\r\n        }\r\n});\r\n\r\nexport default ModalInput;"]},"metadata":{},"sourceType":"module"}