{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Sound from 'react-native-sound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar img_speaker = require(\"./resources/ui_speaker.png\");\n\nvar img_pause = require(\"./resources/ui_pause.png\");\n\nvar img_play = require(\"./resources/ui_play.png\");\n\nvar img_playjumpleft = require(\"./resources/ui_playjumpleft.png\");\n\nvar img_playjumpright = require(\"./resources/ui_playjumpright.png\");\n\nvar PlayerScreen = function (_React$Component) {\n  _inherits(PlayerScreen, _React$Component);\n\n  var _super = _createSuper(PlayerScreen);\n\n  function PlayerScreen() {\n    var _this;\n\n    _classCallCheck(this, PlayerScreen);\n\n    _this = _super.call(this);\n\n    _this.onSliderEditStart = function () {\n      _this.sliderEditing = true;\n    };\n\n    _this.onSliderEditEnd = function () {\n      _this.sliderEditing = false;\n    };\n\n    _this.onSliderEditing = function (value) {\n      if (_this.sound) {\n        _this.sound.setCurrentTime(value);\n\n        _this.setState({\n          playSeconds: value\n        });\n      }\n    };\n\n    _this.play = function _callee() {\n      var filepath;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.sound) {\n                _this.sound.play(_this.playComplete);\n\n                _this.setState({\n                  playState: 'playing'\n                });\n              } else {\n                filepath = _this.props.navigation.state.params.filepath;\n                console.log('[Play]', filepath);\n                _this.sound = new Sound(filepath, '', function (error) {\n                  if (error) {\n                    console.log('failed to load the sound', error);\n                    Alert.alert('Notice', 'audio file error. (Error code : 1)');\n\n                    _this.setState({\n                      playState: 'paused'\n                    });\n                  } else {\n                    _this.setState({\n                      playState: 'playing',\n                      duration: _this.sound.getDuration()\n                    });\n\n                    _this.sound.play(_this.playComplete);\n                  }\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.playComplete = function (success) {\n      if (_this.sound) {\n        if (success) {\n          console.log('successfully finished playing');\n        } else {\n          console.log('playback failed due to audio decoding errors');\n          Alert.alert('Notice', 'audio file error. (Error code : 2)');\n        }\n\n        _this.setState({\n          playState: 'paused',\n          playSeconds: 0\n        });\n\n        _this.sound.setCurrentTime(0);\n      }\n    };\n\n    _this.pause = function () {\n      if (_this.sound) {\n        _this.sound.pause();\n      }\n\n      _this.setState({\n        playState: 'paused'\n      });\n    };\n\n    _this.jumpPrev15Seconds = function () {\n      _this.jumpSeconds(-15);\n    };\n\n    _this.jumpNext15Seconds = function () {\n      _this.jumpSeconds(15);\n    };\n\n    _this.jumpSeconds = function (secsDelta) {\n      if (_this.sound) {\n        _this.sound.getCurrentTime(function (secs, isPlaying) {\n          var nextSecs = secs + secsDelta;\n          if (nextSecs < 0) nextSecs = 0;else if (nextSecs > _this.state.duration) nextSecs = _this.state.duration;\n\n          _this.sound.setCurrentTime(nextSecs);\n\n          _this.setState({\n            playSeconds: nextSecs\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      playState: 'paused',\n      playSeconds: 0,\n      duration: 0\n    };\n    _this.sliderEditing = false;\n    return _this;\n  }\n\n  _createClass(PlayerScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.play();\n      this.timeout = setInterval(function () {\n        if (_this2.sound && _this2.sound.isLoaded() && _this2.state.playState == 'playing' && !_this2.sliderEditing) {\n          _this2.sound.getCurrentTime(function (seconds, isPlaying) {\n            _this2.setState({\n              playSeconds: seconds\n            });\n          });\n        }\n      }, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.sound) {\n        this.sound.release();\n        this.sound = null;\n      }\n\n      if (this.timeout) {\n        clearInterval(this.timeout);\n      }\n    }\n  }, {\n    key: \"getAudioTimeString\",\n    value: function getAudioTimeString(seconds) {\n      var h = parseInt(seconds / (60 * 60));\n      var m = parseInt(seconds % (60 * 60) / 60);\n      var s = parseInt(seconds % 60);\n      return (h < 10 ? '0' + h : h) + ':' + (m < 10 ? '0' + m : m) + ':' + (s < 10 ? '0' + s : s);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentTimeString = this.getAudioTimeString(this.state.playSeconds);\n      var durationString = this.getAudioTimeString(this.state.duration);\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: 'black'\n        },\n        children: [_jsx(Image, {\n          source: img_speaker,\n          style: {\n            width: 150,\n            height: 150,\n            marginBottom: 15,\n            alignSelf: 'center'\n          }\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginVertical: 15\n          },\n          children: [_jsxs(TouchableOpacity, {\n            onPress: this.jumpPrev15Seconds,\n            style: {\n              justifyContent: 'center'\n            },\n            children: [_jsx(Image, {\n              source: img_playjumpleft,\n              style: {\n                width: 30,\n                height: 30\n              }\n            }), _jsx(Text, {\n              style: {\n                position: 'absolute',\n                alignSelf: 'center',\n                marginTop: 1,\n                color: 'white',\n                fontSize: 12\n              },\n              children: \"15\"\n            })]\n          }), this.state.playState == 'playing' && _jsx(TouchableOpacity, {\n            onPress: this.pause,\n            style: {\n              marginHorizontal: 20\n            },\n            children: _jsx(Image, {\n              source: img_pause,\n              style: {\n                width: 30,\n                height: 30\n              }\n            })\n          }), this.state.playState == 'paused' && _jsx(TouchableOpacity, {\n            onPress: this.play,\n            style: {\n              marginHorizontal: 20\n            },\n            children: _jsx(Image, {\n              source: img_play,\n              style: {\n                width: 30,\n                height: 30\n              }\n            })\n          }), _jsxs(TouchableOpacity, {\n            onPress: this.jumpNext15Seconds,\n            style: {\n              justifyContent: 'center'\n            },\n            children: [_jsx(Image, {\n              source: img_playjumpright,\n              style: {\n                width: 30,\n                height: 30\n              }\n            }), _jsx(Text, {\n              style: {\n                position: 'absolute',\n                alignSelf: 'center',\n                marginTop: 1,\n                color: 'white',\n                fontSize: 12\n              },\n              children: \"15\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: {\n            marginVertical: 15,\n            marginHorizontal: 15,\n            flexDirection: 'row'\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: 'white',\n              alignSelf: 'center'\n            },\n            children: currentTimeString\n          }), _jsx(Slider, {\n            onTouchStart: this.onSliderEditStart,\n            onTouchEnd: this.onSliderEditEnd,\n            onValueChange: this.onSliderEditing,\n            value: this.state.playSeconds,\n            maximumValue: this.state.duration,\n            maximumTrackTintColor: \"gray\",\n            minimumTrackTintColor: \"white\",\n            thumbTintColor: \"white\",\n            style: {\n              flex: 1,\n              alignSelf: 'center',\n              marginHorizontal: Platform.select({\n                ios: 5\n              })\n            }\n          }), _jsx(Text, {\n            style: {\n              color: 'white',\n              alignSelf: 'center'\n            },\n            children: durationString\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return PlayerScreen;\n}(React.Component);\n\nPlayerScreen.navigationOptions = function (props) {\n  return {\n    title: props.navigation.state.params.title\n  };\n};\n\nexport { PlayerScreen as default };","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/node_modules/react-native-sound-playerview/index.js"],"names":["React","Slider","Sound","img_speaker","require","img_pause","img_play","img_playjumpleft","img_playjumpright","PlayerScreen","onSliderEditStart","sliderEditing","onSliderEditEnd","onSliderEditing","value","sound","setCurrentTime","setState","playSeconds","play","playComplete","playState","filepath","props","navigation","state","params","console","log","error","Alert","alert","duration","getDuration","success","pause","jumpPrev15Seconds","jumpSeconds","jumpNext15Seconds","secsDelta","getCurrentTime","secs","isPlaying","nextSecs","timeout","setInterval","isLoaded","seconds","release","clearInterval","h","parseInt","m","s","currentTimeString","getAudioTimeString","durationString","flex","justifyContent","backgroundColor","width","height","marginBottom","alignSelf","flexDirection","marginVertical","position","marginTop","color","fontSize","marginHorizontal","Platform","select","ios","Component","navigationOptions","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Image, Text, Slider, TouchableOpacity, Platform, Alert} from 'react-native';\n\nimport Sound from 'react-native-sound';\n\nconst img_speaker = require('./resources/ui_speaker.png');\nconst img_pause = require('./resources/ui_pause.png');\nconst img_play = require('./resources/ui_play.png');\nconst img_playjumpleft = require('./resources/ui_playjumpleft.png');\nconst img_playjumpright = require('./resources/ui_playjumpright.png');\n\nexport default class PlayerScreen extends React.Component{\n\n    static navigationOptions = props => ({\n        title:props.navigation.state.params.title,\n    })\n\n    constructor(){\n        super();\n        this.state = {\n            playState:'paused', //playing, paused\n            playSeconds:0,\n            duration:0\n        }\n        this.sliderEditing = false;\n    }\n\n    componentDidMount(){\n        this.play();\n        \n        this.timeout = setInterval(() => {\n            if(this.sound && this.sound.isLoaded() && this.state.playState == 'playing' && !this.sliderEditing){\n                this.sound.getCurrentTime((seconds, isPlaying) => {\n                    this.setState({playSeconds:seconds});\n                })\n            }\n        }, 100);\n    }\n    componentWillUnmount(){\n        if(this.sound){\n            this.sound.release();\n            this.sound = null;\n        }\n        if(this.timeout){\n            clearInterval(this.timeout);\n        }\n    }\n\n    onSliderEditStart = () => {\n        this.sliderEditing = true;\n    }\n    onSliderEditEnd = () => {\n        this.sliderEditing = false;\n    }\n    onSliderEditing = value => {\n        if(this.sound){\n            this.sound.setCurrentTime(value);\n            this.setState({playSeconds:value});\n        }\n    }\n\n    play = async () => {\n        if(this.sound){\n            this.sound.play(this.playComplete);\n            this.setState({playState:'playing'});\n        }else{\n            const filepath = this.props.navigation.state.params.filepath;\n            console.log('[Play]', filepath);\n    \n            this.sound = new Sound(filepath, '', (error) => {\n                if (error) {\n                    console.log('failed to load the sound', error);\n                    Alert.alert('Notice', 'audio file error. (Error code : 1)');\n                    this.setState({playState:'paused'});\n                }else{\n                    this.setState({playState:'playing', duration:this.sound.getDuration()});\n                    this.sound.play(this.playComplete);\n                }\n            });    \n        }\n    }\n    playComplete = (success) => {\n        if(this.sound){\n            if (success) {\n                console.log('successfully finished playing');\n            } else {\n                console.log('playback failed due to audio decoding errors');\n                Alert.alert('Notice', 'audio file error. (Error code : 2)');\n            }\n            this.setState({playState:'paused', playSeconds:0});\n            this.sound.setCurrentTime(0);\n        }\n    }\n\n    pause = () => {\n        if(this.sound){\n            this.sound.pause();\n        }\n\n        this.setState({playState:'paused'});\n    }\n\n    jumpPrev15Seconds = () => {this.jumpSeconds(-15);}\n    jumpNext15Seconds = () => {this.jumpSeconds(15);}\n    jumpSeconds = (secsDelta) => {\n        if(this.sound){\n            this.sound.getCurrentTime((secs, isPlaying) => {\n                let nextSecs = secs + secsDelta;\n                if(nextSecs < 0) nextSecs = 0;\n                else if(nextSecs > this.state.duration) nextSecs = this.state.duration;\n                this.sound.setCurrentTime(nextSecs);\n                this.setState({playSeconds:nextSecs});\n            })\n        }\n    }\n\n    getAudioTimeString(seconds){\n        const h = parseInt(seconds/(60*60));\n        const m = parseInt(seconds%(60*60)/60);\n        const s = parseInt(seconds%60);\n\n        return ((h<10?'0'+h:h) + ':' + (m<10?'0'+m:m) + ':' + (s<10?'0'+s:s));\n    }\n\n    render(){\n\n        const currentTimeString = this.getAudioTimeString(this.state.playSeconds);\n        const durationString = this.getAudioTimeString(this.state.duration);\n\n        return (\n            <View style={{flex:1, justifyContent:'center', backgroundColor:'black'}}>\n                <Image source={img_speaker} style={{width:150, height:150, marginBottom:15, alignSelf:'center'}}/>\n                <View style={{flexDirection:'row', justifyContent:'center', marginVertical:15}}>\n                    <TouchableOpacity onPress={this.jumpPrev15Seconds} style={{justifyContent:'center'}}>\n                        <Image source={img_playjumpleft} style={{width:30, height:30}}/>\n                        <Text style={{position:'absolute', alignSelf:'center', marginTop:1, color:'white', fontSize:12}}>15</Text>\n                    </TouchableOpacity>\n                    {this.state.playState == 'playing' && \n                    <TouchableOpacity onPress={this.pause} style={{marginHorizontal:20}}>\n                        <Image source={img_pause} style={{width:30, height:30}}/>\n                    </TouchableOpacity>}\n                    {this.state.playState == 'paused' && \n                    <TouchableOpacity onPress={this.play} style={{marginHorizontal:20}}>\n                        <Image source={img_play} style={{width:30, height:30}}/>\n                    </TouchableOpacity>}\n                    <TouchableOpacity onPress={this.jumpNext15Seconds} style={{justifyContent:'center'}}>\n                        <Image source={img_playjumpright} style={{width:30, height:30}}/>\n                        <Text style={{position:'absolute', alignSelf:'center', marginTop:1, color:'white', fontSize:12}}>15</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={{marginVertical:15, marginHorizontal:15, flexDirection:'row'}}>\n                    <Text style={{color:'white', alignSelf:'center'}}>{currentTimeString}</Text>\n                    <Slider\n                        onTouchStart={this.onSliderEditStart}\n                        // onTouchMove={() => console.log('onTouchMove')}\n                        onTouchEnd={this.onSliderEditEnd}\n                        // onTouchEndCapture={() => console.log('onTouchEndCapture')}\n                        // onTouchCancel={() => console.log('onTouchCancel')}\n                        onValueChange={this.onSliderEditing}\n                        value={this.state.playSeconds} maximumValue={this.state.duration} maximumTrackTintColor='gray' minimumTrackTintColor='white' thumbTintColor='white' \n                        style={{flex:1, alignSelf:'center', marginHorizontal:Platform.select({ios:5})}}/>\n                    <Text style={{color:'white', alignSelf:'center'}}>{durationString}</Text>\n                </View>\n            </View>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}