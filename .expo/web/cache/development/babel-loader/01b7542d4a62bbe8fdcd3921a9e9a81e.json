{"ast":null,"code":"import React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Timer from \"./components/Timer\";\nimport RoundButton from \"./components/RoundButton\";\nimport ButtonsRow from \"./components/ButtonsRow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AppWatch = function AppWatch() {\n  {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"hi\"\n      })\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    paddingTop: 130,\n    paddingHorizontal: 20\n  }\n});\nexport default AppWatch;","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/stopper/appStopWatch.jsx"],"names":["React","useState","Timer","RoundButton","ButtonsRow","AppWatch","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","paddingTop","paddingHorizontal"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,KAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;;;AAGA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,GAAI;AAClB;AAyCA,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,gBACA,KAAC,IAAD;AAAA;AAAA;AADA,MADF;AAKD;AACA,CAhDD;;AAkDA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,UAAU,EAAE,GAJH;AAKTC,IAAAA,iBAAiB,EAAC;AALT;AADoB,CAAlB,CAAf;AAgBA,eAAeT,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Timer from './components/Timer'\r\nimport RoundButton from './components/RoundButton'\r\nimport ButtonsRow from './components/ButtonsRow'\r\n\r\n\r\nconst AppWatch= ()=>{\r\n  {/*\r\nconst [startTime, setStartTime]= useState(0)\r\nconst [currTime, setCurrTime]= useState(0)\r\nconst [lastLap, setlastLap]= useState(0)\r\nconst [timer, setTimer]= useState(0)\r\n\r\nconst start = ()=>{\r\n  const time = new Date().getTime()\r\n  setStartTime(time)\r\n  setCurrTime(time)\r\n\r\n  setTimer(\r\n    setInterval(()=>{\r\n      setCurrTime(new Date().getTime())\r\n    },100)\r\n  ) \r\n}\r\n\r\nconst stop = ()=>{\r\n  clearInterval(timer)\r\n  setlastLap(lastLap + currTime - startTime)\r\n  setStartTime(0)\r\n  setCurrTime(0)\r\n}\r\n\r\nconst reset = ()=>{\r\n  setStartTime(0)\r\n  setCurrTime(0)\r\n  setlastLap(0)\r\n}\r\n\r\nconst resume = ()=>{\r\n  const time= new Data().getTime();\r\n  setStartTime(time)\r\n  setCurrTime(time)\r\n  setTimer(\r\n    setInterval(()=>{\r\n      setCurrTime(new Date().getTime())\r\n    },100)\r\n  )\r\n*/\r\n  return (\r\n    <View style={styles.container}>\r\n    <Text>hi</Text>\r\n    </View>\r\n );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    alignItems: 'center',\r\n    paddingTop: 130,\r\n    paddingHorizontal:20\r\n  },\r\n  // timer:{\r\n  //   color:'white',\r\n  //   fontSize: 76,\r\n  //   fontWeight:'200',\r\n  //   width: 120,\r\n  // },\r\n});\r\n\r\nexport default AppWatch\r\n"]},"metadata":{},"sourceType":"module"}