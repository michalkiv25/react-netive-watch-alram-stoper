{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport In from \"./InputAlarm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar schema = yup.object({\n  hours: yup.number().required(\"Must insert hours\").test(\"is hours valid\", \"Must be between 0 - 24\", function (val) {\n    return parseInt(val) >= 0 && parseInt(val) < 24;\n  }),\n  minute: yup.number().required(\"Must insert minutes\").test(\"is minutes valid\", \"Must be between 0 - 60\", function (val) {\n    return parseInt(val) >= 0 && parseInt(val) < 60;\n  })\n});\n\nfunction ReviewForm(_ref) {\n  var _save = _ref.save;\n  return _jsx(View, {\n    children: _jsx(Formik, {\n      validationSchema: schema,\n      initialValues: {\n        hours: \"\",\n        minute: \"\"\n      },\n      onSubmit: function onSubmit(values, actions) {\n        actions.resetForm();\n\n        _save(values);\n\n        console.log(values);\n      },\n      children: function children(props) {\n        return _jsx(InputAlarm, {\n          props: props,\n          save: function save() {\n            _save(props.values);\n          }\n        });\n      }\n    })\n  });\n}\n\nexport default ReviewForm;","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/alarm/components/ReviewFormAlarm.jsx"],"names":["Formik","yup","In","schema","object","hours","number","required","test","val","parseInt","minute","ReviewForm","save","values","actions","resetForm","console","log","props"],"mappings":";AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,EAAP;;AAGA,IAAMC,MAAM,GAAEF,GAAG,CAACG,MAAJ,CAAW;AACvBC,EAAAA,KAAK,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,EACJC,IADI,CACC,gBADD,EACmB,wBADnB,EAC6C,UAACC,GAAD;AAAA,WAAUC,QAAQ,CAACD,GAAD,CAAR,IAAiB,CAAjB,IAAsBC,QAAQ,CAACD,GAAD,CAAR,GAAgB,EAAhD;AAAA,GAD7C,CADgB;AAGvBE,EAAAA,MAAM,EAAEV,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,EACPC,IADO,CACF,kBADE,EACkB,wBADlB,EAC4C,UAACC,GAAD;AAAA,WAAUC,QAAQ,CAACD,GAAD,CAAR,IAAiB,CAAjB,IAAsBC,QAAQ,CAACD,GAAD,CAAR,GAAgB,EAAhD;AAAA,GAD5C;AAHe,CAAX,CAAd;;AAOA,SAASG,UAAT,OAA2B;AAAA,MAANC,KAAM,QAANA,IAAM;AACzB,SACE,KAAC,IAAD;AAAA,cACE,KAAC,MAAD;AACE,MAAA,gBAAgB,EAAEV,MADpB;AAEE,MAAA,aAAa,EAAE;AAACE,QAAAA,KAAK,EAAE,EAAR;AAAWM,QAAAA,MAAM,EAAC;AAAlB,OAFjB;AAGE,MAAA,QAAQ,EAAE,kBAACG,MAAD,EAAQC,OAAR,EAAkB;AAC1BA,QAAAA,OAAO,CAACC,SAAR;;AACAH,QAAAA,KAAI,CAACC,MAAD,CAAJ;;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAAoB,OANxB;AAAA,gBAQG,kBAACK,KAAD;AAAA,eACC,KAAC,UAAD;AAAY,UAAA,KAAK,EAAEA,KAAnB;AAA0B,UAAA,IAAI,EAAE,gBAAI;AAACN,YAAAA,KAAI,CAACM,KAAK,CAACL,MAAP,CAAJ;AAAmB;AAAxD,UADD;AAAA;AARH;AADF,IADF;AAgBD;;AAED,eAAeF,UAAf","sourcesContent":["import { View} from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport In from './InputAlarm'\r\n\r\n// Validation-yup\r\nconst schema= yup.object({\r\n  hours: yup.number().required(\"Must insert hours\")\r\n    .test(\"is hours valid\", \"Must be between 0 - 24\", (val) => (parseInt(val) >= 0 && parseInt(val) < 24)),\r\n  minute: yup.number().required(\"Must insert minutes\")\r\n  .test(\"is minutes valid\", \"Must be between 0 - 60\", (val) => (parseInt(val) >= 0 && parseInt(val) < 60)),\r\n})\r\n\r\nfunction ReviewForm({save}){\r\n  return (\r\n    <View>\r\n      <Formik \r\n        validationSchema={schema}\r\n        initialValues={{hours: \"\",minute:\"\"}} \r\n        onSubmit={(values,actions)=>{\r\n          actions.resetForm();\r\n          save(values)\r\n          console.log(values)}}\r\n      >\r\n        {(props)=>(\r\n          <InputAlarm props={props} save={()=>{save(props.values)}}></InputAlarm>\r\n        )}\r\n      </Formik>\r\n   </View>\r\n  )\r\n}\r\n\r\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}