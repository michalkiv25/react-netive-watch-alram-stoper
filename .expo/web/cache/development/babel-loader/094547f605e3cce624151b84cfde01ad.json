{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport moment from \"moment\";\nimport ButtonsRow from \"../stopper/components/ButtonsRow\";\nimport ButtonClick from \"../stopper/components/ButtonClick\";\nimport ModalInput from \"../watch/components/ModalInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AppAlarm() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      houalarm = _useState2[0],\n      setAlarm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalOpen = _useState4[0],\n      setmodalOpen = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalFormat = _useState6[0],\n      setmodalFormat = _useState6[1];\n\n  var set = function set() {\n    if (modalOpen == false) {\n      setmodalOpen(true);\n    } else {\n      setmodalOpen(false);\n    }\n  };\n\n  var Enable = function Enable() {\n    console.log(6);\n  };\n\n  var Disables = function Disables() {\n    console.log(7);\n  };\n\n  var save = function save(values) {\n    console.log(values);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"00:00\"\n    }), alarm == 0 && _jsxs(ButtonsRow, {\n      children: [_jsx(ButtonClick, {\n        title: \"Set\",\n        background: \"#5F9EA0\",\n        onPress: set,\n        fontSize: 22\n      }), _jsx(ButtonClick, {\n        title: \"Enable\",\n        background: \"#5F9EA0\",\n        onPress: Enable,\n        fontSize: 17\n      })]\n    }), alarm == 0 && _jsxs(ButtonsRow, {\n      children: [_jsx(ButtonClick, {\n        title: \"Set\",\n        background: \"#5F9EA0\",\n        onPress: set,\n        fontSize: 22\n      }), _jsx(ButtonClick, {\n        title: \"Disables\",\n        background: \"#5F9EA0\",\n        onPress: Disables,\n        fontSize: 14\n      })]\n    }), _jsx(ModalInput, {\n      modalOpen: modalOpen,\n      set: set,\n      save: save,\n      modalFormat: modalFormat\n    })]\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/alarm/AppAlarm.js"],"names":["useState","moment","ButtonsRow","ButtonClick","ModalInput","AppAlarm","houalarm","setAlarm","modalOpen","setmodalOpen","modalFormat","setmodalFormat","set","Enable","console","log","Disables","save","values","alarm","styles","StyleSheet","create"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;;;AAKA,eAAe,SAASC,QAAT,GAAoB;AAE/B,kBAA4BL,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAgBC,QAAhB;;AACA,mBAAiCP,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAiBC,YAAjB;;AAEA,mBAAsCT,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOU,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAI;AACZ,QAAGJ,SAAS,IAAI,KAAhB,EAAsB;AAClBC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD,MAEK;AACDA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAND;;AAQA,MAAMI,MAAM,GAAE,SAARA,MAAQ,GAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH,GAFD;;AAIA,MAAMC,QAAQ,GAAE,SAAVA,QAAU,GAAI;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH,GAFD;;AAIA,MAAME,IAAI,GAAC,SAALA,IAAK,CAACC,MAAD,EAAU;AACjBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACD,GAFH;;AAIF,SACE,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAGKC,KAAK,IAAI,CAAT,IACD,MAAC,UAAD;AAAA,iBACI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,KAAnB;AAA0B,QAAA,UAAU,EAAC,SAArC;AAA+C,QAAA,OAAO,EAAEP,GAAxD;AAA6D,QAAA,QAAQ,EAAE;AAAvE,QADJ,EAEI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,QAAnB;AAA6B,QAAA,UAAU,EAAC,SAAxC;AAAkD,QAAA,OAAO,EAAEC,MAA3D;AAAmE,QAAA,QAAQ,EAAE;AAA7E,QAFJ;AAAA,MAJJ,EAUKM,KAAK,IAAI,CAAT,IACD,MAAC,UAAD;AAAA,iBACI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,KAAnB;AAA0B,QAAA,UAAU,EAAC,SAArC;AAA+C,QAAA,OAAO,EAAEP,GAAxD;AAA6D,QAAA,QAAQ,EAAE;AAAvE,QADJ,EAEI,KAAC,WAAD;AAAa,QAAA,KAAK,EAAC,UAAnB;AAA+B,QAAA,UAAU,EAAC,SAA1C;AAAoD,QAAA,OAAO,EAAEI,QAA7D;AAAuE,QAAA,QAAQ,EAAE;AAAjF,QAFJ;AAAA,MAXJ,EAiBI,KAAC,UAAD;AAAY,MAAA,SAAS,EAAER,SAAvB;AAAkC,MAAA,GAAG,EAAEI,GAAvC;AAA4C,MAAA,IAAI,EAAEK,IAAlD;AAAwD,MAAA,WAAW,EAAEP;AAArE,MAjBJ;AAAA,IADF;AAwBD;AAED,IAAMU,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { useState } from 'react';\r\nimport { StyleSheet, Text,View } from 'react-native';\r\nimport moment from \"moment\";\r\n\r\nimport ButtonsRow from '../stopper/components/ButtonsRow';\r\nimport ButtonClick from '../stopper/components/ButtonClick'\r\nimport ModalInput from '../watch/components/ModalInput';\r\n\r\n\r\n\r\n\r\nexport default function AppAlarm() {\r\n\r\n    const [houalarm,setAlarm] = useState(0)\r\n    const [modalOpen,setmodalOpen] = useState(false)\r\n\r\n    const [modalFormat, setmodalFormat] = useState(true)\r\n\r\n    const set = ()=>{\r\n        if(modalOpen == false){\r\n            setmodalOpen(true)\r\n        }else{\r\n            setmodalOpen(false)\r\n        }\r\n    }\r\n    \r\n    const Enable= ()=>{\r\n        console.log(6)\r\n    }\r\n    \r\n    const Disables= ()=>{\r\n        console.log(7)\r\n    }\r\n    \r\n    const save=(values)=>{\r\n        console.log(values)\r\n      }\r\n\r\n  return (\r\n    <View>\r\n        <Text>00:00</Text>\r\n\r\n        {alarm == 0 && (\r\n        <ButtonsRow>\r\n            <ButtonClick title=\"Set\"  background=\"#5F9EA0\" onPress={set} fontSize={22}></ButtonClick>\r\n            <ButtonClick title=\"Enable\"  background=\"#5F9EA0\" onPress={Enable} fontSize={17}></ButtonClick>\r\n        </ButtonsRow>\r\n        )}\r\n\r\n        {alarm == 0 && (\r\n        <ButtonsRow>\r\n            <ButtonClick title=\"Set\"  background=\"#5F9EA0\" onPress={set} fontSize={22}></ButtonClick>\r\n            <ButtonClick title=\"Disables\"  background=\"#5F9EA0\" onPress={Disables} fontSize={14}></ButtonClick>\r\n        </ButtonsRow>\r\n        )}\r\n\r\n        <ModalInput modalOpen={modalOpen} set={set} save={save} modalFormat={modalFormat}/>\r\n\r\n        \r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});"]},"metadata":{},"sourceType":"module"}