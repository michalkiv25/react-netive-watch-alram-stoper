{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Input from \"../../utills/components/Input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar schema = yup.object({\n  hours: yup.number().required(\"Must insert hours\").test(\"is hours valid\", \"Must be between 0 - 24\", function (val) {\n    return parseInt(val) >= 0 && parseInt(val) < 24;\n  }),\n  minute: yup.number().required(\"Must insert minutes\").test(\"is minutes valid\", \"Must be between 0 - 60\", function (val) {\n    return parseInt(val) >= 0 && parseInt(val) < 60;\n  }),\n  second: yup.number().required(\"Must insert seconds\").test(\"is seconds valid\", \"Must be between 0 - 60\", function (val) {\n    return parseInt(val) >= 0 && parseInt(val) < 60;\n  }),\n  date: yup.date().required(\"Must insert date\")\n});\n\nfunction ReviewForm(_ref) {\n  var _save = _ref.save,\n      modalFormat = _ref.modalFormat;\n  return _jsx(View, {\n    children: _jsx(Formik, {\n      validationSchema: schema,\n      initialValues: {\n        hours: \"\",\n        minute: \"\",\n        second: \"\",\n        date: \"\"\n      },\n      onSubmit: function onSubmit(values, actions) {\n        actions.resetForm();\n\n        _save(values);\n      },\n      children: function children(props) {\n        return _jsx(Input, {\n          props: props,\n          save: function save() {\n            _save(props.values);\n          },\n          modalFormat: modalFormat\n        });\n      }\n    })\n  });\n}\n\nexport default ReviewForm;","map":{"version":3,"sources":["C:/Users/micha/Desktop/react netive/project/watch/components/ReviewForm.jsx"],"names":["Formik","yup","Input","schema","object","hours","number","required","test","val","parseInt","minute","second","date","ReviewForm","save","modalFormat","values","actions","resetForm","props"],"mappings":";AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA,OAAOC,KAAP;;AAGA,IAAMC,MAAM,GAAEF,GAAG,CAACG,MAAJ,CAAW;AACvBC,EAAAA,KAAK,EACHJ,GAAG,CAACK,MAAJ,GACCC,QADD,CACU,mBADV,EAECC,IAFD,CAEM,gBAFN,EAEwB,wBAFxB,EAEkD,UAACC,GAAD;AAAA,WAAUC,QAAQ,CAACD,GAAD,CAAR,IAAiB,CAAjB,IAAsBC,QAAQ,CAACD,GAAD,CAAR,GAAgB,EAAhD;AAAA,GAFlD,CAFqB;AAKvBE,EAAAA,MAAM,EACJV,GAAG,CAACK,MAAJ,GACCC,QADD,CACU,qBADV,EAECC,IAFD,CAEM,kBAFN,EAE0B,wBAF1B,EAEoD,UAACC,GAAD;AAAA,WAAUC,QAAQ,CAACD,GAAD,CAAR,IAAiB,CAAjB,IAAsBC,QAAQ,CAACD,GAAD,CAAR,GAAgB,EAAhD;AAAA,GAFpD,CANqB;AASvBG,EAAAA,MAAM,EACNX,GAAG,CAACK,MAAJ,GACGC,QADH,CACY,qBADZ,EAEGC,IAFH,CAEQ,kBAFR,EAE4B,wBAF5B,EAEsD,UAACC,GAAD;AAAA,WAAUC,QAAQ,CAACD,GAAD,CAAR,IAAiB,CAAjB,IAAsBC,QAAQ,CAACD,GAAD,CAAR,GAAgB,EAAhD;AAAA,GAFtD,CAVuB;AAavBI,EAAAA,IAAI,EACFZ,GAAG,CAACY,IAAJ,GACCN,QADD,CACU,kBADV;AAdqB,CAAX,CAAd;;AAkBA,SAASO,UAAT,OAAuC;AAAA,MAAlBC,KAAkB,QAAlBA,IAAkB;AAAA,MAAbC,WAAa,QAAbA,WAAa;AACrC,SACE,KAAC,IAAD;AAAA,cACE,KAAC,MAAD;AACI,MAAA,gBAAgB,EAAEb,MADtB;AAEI,MAAA,aAAa,EAAE;AAACE,QAAAA,KAAK,EAAE,EAAR;AAAWM,QAAAA,MAAM,EAAC,EAAlB;AAAqBC,QAAAA,MAAM,EAAC,EAA5B;AAAgCC,QAAAA,IAAI,EAAC;AAArC,OAFnB;AAGI,MAAA,QAAQ,EAAE,kBAACI,MAAD,EAAQC,OAAR,EAAkB;AAC1BA,QAAAA,OAAO,CAACC,SAAR;;AACAJ,QAAAA,KAAI,CAACE,MAAD,CAAJ;AACD,OANL;AAAA,gBAOG,kBAACG,KAAD;AAAA,eACC,KAAC,KAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAEE,UAAA,IAAI,EAAE,gBAAI;AAACL,YAAAA,KAAI,CAACK,KAAK,CAACH,MAAP,CAAJ;AAAmB,WAFhC;AAGE,UAAA,WAAW,EAAED;AAHf,UADD;AAAA;AAPH;AADF,IADF;AAmBD;;AAED,eAAeF,UAAf","sourcesContent":["import { View} from 'react-native';\r\nimport { Formik } from 'formik';// From\r\nimport * as yup from 'yup'; //Import Validation\r\n\r\n// Import components from the project\r\nimport Input from '../../utills/components/Input';\r\n\r\n// Validation-yup\r\nconst schema= yup.object({\r\n  hours: \r\n    yup.number()\r\n    .required(\"Must insert hours\")\r\n    .test(\"is hours valid\", \"Must be between 0 - 24\", (val) => (parseInt(val) >= 0 && parseInt(val) < 24)),\r\n  minute: \r\n    yup.number()\r\n    .required(\"Must insert minutes\")\r\n    .test(\"is minutes valid\", \"Must be between 0 - 60\", (val) => (parseInt(val) >= 0 && parseInt(val) < 60)),\r\n  second: \r\n  yup.number()\r\n    .required(\"Must insert seconds\")\r\n    .test(\"is seconds valid\", \"Must be between 0 - 60\", (val) => (parseInt(val) >= 0 && parseInt(val) < 60)),\r\n  date: \r\n    yup.date()\r\n    .required(\"Must insert date\"),\r\n})\r\n\r\nfunction ReviewForm({save,modalFormat}){\r\n  return (\r\n    <View>\r\n      <Formik \r\n          validationSchema={schema}\r\n          initialValues={{hours: \"\",minute:\"\",second:\"\", date:\"\" }} \r\n          onSubmit={(values,actions)=>{\r\n            actions.resetForm(); //\r\n            save(values)\r\n          }}>\r\n        {(props)=>(\r\n          <Input \r\n            props={props} \r\n            save={()=>{save(props.values)}} \r\n            modalFormat={modalFormat}>\r\n          </Input>\r\n        )}\r\n      </Formik>\r\n   </View>\r\n  )\r\n}\r\n\r\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}